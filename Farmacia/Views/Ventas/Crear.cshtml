@model Farmacia.Models.Venta

@{
    ViewData["Title"] = "Nueva Venta";
    var promociones = ViewBag.Promociones as List<Farmacia.Models.Promocion>;
    var clienteId = Model?.ClienteId ?? 0;
    var clienteNombreCompleto = ViewBag.ClienteNombreCompleto as string ?? "";
}

<div class="container my-4">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            <h3 class="mb-0"><i class="bi bi-cart-plus"></i> Nueva Venta</h3>
        </div>
        <div class="card-body">
            @if (!ViewData.ModelState.IsValid && ViewData.ModelState.Values.Any(v => v.Errors.Count > 0))
            {
                @Html.ValidationSummary(false, "", new { @class = "alert alert-danger" })
            }
            <form asp-action="Crear" method="post" autocomplete="off">
                <div class="row g-3">
                    <div class="col-md-6">
                        <label for="clienteInput" class="form-label">Cliente</label>
                        <select id="clienteInput" name="ClienteId" class="form-select" style="width:100%" required>
                            @if (clienteId > 0 && !string.IsNullOrEmpty(clienteNombreCompleto))
                            {
                                <option value="@clienteId" selected="selected">@clienteNombreCompleto</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-6 d-flex align-items-end">
                        <div>
                            <span class="fw-bold">Saldo de puntos:</span>
                            <span id="saldoPuntos" class="badge bg-info text-dark ms-2">0</span>
                        </div>
                    </div>
                </div>

                <hr class="my-4" />

                <div class="row g-3">
                    <div class="col-md-6">
                        <label for="PromocionId" class="form-label">Promoción</label>
                        <select id="PromocionId" name="PromocionId" class="form-select">
                            <option value="" data-descuento="0">Sin promoción</option>
                            @if (promociones != null)
                            {
                                foreach (var promo in promociones)
                                {
                                    <option value="@promo.Id" data-descuento="@promo.Descuento.ToString(System.Globalization.CultureInfo.InvariantCulture)" data-minpuntos="@promo.CantidadMinima">
                                        @promo.Nombre (@(promo.Descuento * 100)%) - Min: @promo.CantidadMinima pts
                                    </option>
                                }
                            }
                        </select>
                    </div>
                </div>

                <div class="mt-4">
                    <h5 class="mb-3"><i class="bi bi-bag-plus"></i> Detalles de la venta</h5>
                    <div class="row g-3 align-items-end">
                        <div class="col-md-6">
                            <label for="drogaSelect" class="form-label">Buscar droga</label>
                            <select id="drogaSelect" class="form-select" style="width:100%"></select>
                        </div>
                    </div>
                </div>

                <div class="table-responsive mt-4">
                    <table class="table table-bordered table-hover align-middle" id="tabla-detalles">
                        <thead class="table-light">
                            <tr>
                                <th>Producto</th>
                                <th style="width:110px;">Cantidad</th>
                                <th style="width:140px;">Precio Unitario</th>
                                <th style="width:140px;">Subtotal</th>
                                <th style="width:80px;"></th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Se agregarán dinámicamente filas -->
                        </tbody>
                    </table>
                </div>
                <div class="d-flex justify-content-end align-items-center mt-3">
                    <span class="fs-5 fw-bold me-2">Total:</span>
                    <span id="totalVenta" class="fs-4 text-success">$0.00</span>
                </div>
                <div class="d-flex justify-content-end align-items-center mt-2">
                    <span class="me-2">Descuento:</span>
                    <span id="descuentoVenta" class="fs-5 text-primary">$0.00</span>
                </div>
                <div class="d-flex justify-content-end align-items-center mt-1">
                    <span class="me-2">Total con descuento:</span>
                    <span id="totalConDescuento" class="fs-4 text-success">$0.00</span>
                </div>

                <input type="hidden" asp-for="Total" />

                <div class="d-flex justify-content-end mt-4">
                    <button type="submit" class="btn btn-lg btn-primary">
                        <i class="bi bi-check-circle"></i> Registrar Venta
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal para productos relacionados -->
<div class="modal fade" id="modalProductosRelacionados" tabindex="-1" aria-labelledby="modalProductosRelacionadosLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="modalProductosRelacionadosLabel">
                    <i class="bi bi-box-seam"></i> Productos relacionados (orden FEFO)
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body" id="contenidoProductosRelacionados">
                <!-- Aquí se cargará el contenido con AJAX -->
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Select2 para clientes
        $('#clienteInput').select2({
            placeholder: 'Buscar cliente...',
            minimumInputLength: 2,
            ajax: {
                url: '/Clientes/Buscar',
                dataType: 'json',
                delay: 250,
                data: params => ({ term: params.term }),
                processResults: data => data
            }
        }).on('select2:select', function (e) {
            $.get('/Ventas/ObtenerSaldoPuntos', { clienteId: e.params.data.id }, function (data) {
                $('#saldoPuntos').text(data.saldo);
                $('#PromocionId option').each(function () {
                    var minPuntos = parseInt($(this).data('minpuntos') || 0);
                    if (minPuntos > data.saldo) {
                        $(this).hide();
                    } else {
                        $(this).show();
                    }
                });
                $('#PromocionId').val('');
                actualizarDescuento();
            });
        });

        // Si hay cliente seleccionado tras postback, actualiza saldo de puntos
        $(document).ready(function () {
            var clienteId = $('#clienteInput').val();
            if (clienteId) {
                $.get('/Ventas/ObtenerSaldoPuntos', { clienteId: clienteId }, function (data) {
                    $('#saldoPuntos').text(data.saldo);
                });
            }
            actualizarDescuento();
        });

        // Select2 para drogas
        $('#drogaSelect').select2({
            placeholder: 'Buscar droga...',
            minimumInputLength: 2,
            ajax: {
                url: '/Drogas/Buscar',
                dataType: 'json',
                delay: 250,
                data: params => ({ term: params.term }),
                processResults: data => data
            }
        }).on('select2:select', function (e) {
            var drogaId = e.params.data.id;
            $.get('/Productos/ProductosPorDroga', { id: drogaId }, function (html) {
                $('#contenidoProductosRelacionados').html(html);
                $('#modalProductosRelacionados').modal('show');
            });
        });

        // Función global para agregar producto desde el modal
        function seleccionarProductoDesdeSugerencia(productoId, productoNombre, precioUnitario, codigoLote) {
            if (typeof precioUnitario === "string") {
                precioUnitario = precioUnitario.replace(',', '.');
            }
            agregarProductoADetalle(productoId, productoNombre, parseFloat(precioUnitario), codigoLote);
            $('#modalProductosRelacionados').modal('hide');
            $('#drogaSelect').val(null).trigger('change');
        }

        // Lógica para agregar productos a la tabla de detalles
        var filaIndex = 0;
        function agregarProductoADetalle(productoId, productoNombre, precioUnitario, codigoLote) {
            var $tbody = $('#tabla-detalles tbody');
            var rowHtml = `
                <tr data-fila-id="${filaIndex}">
                    <td>
                        <input type="hidden" name="DetallesVenta[${filaIndex}].ProductoId" value="${productoId}" />
                        <input type="hidden" name="DetallesVenta[${filaIndex}].CodigoLote" value="${codigoLote}" />
                        ${productoNombre} <span class="badge bg-secondary">${codigoLote}</span>
                    </td>
                    <td>
                        <input type="number" class="form-control cantidad-input" min="1" value="1" name="DetallesVenta[${filaIndex}].Cantidad" oninput="actualizarSubtotal(this)" />
                    </td>
                    <td>
                        <input type="number" step="0.01" class="form-control precio-unitario" value="${precioUnitario.toFixed(2)}" name="DetallesVenta[${filaIndex}].PrecioUnitario" readonly />
                    </td>
                    <td>
                        <input type="number" step="0.01" class="form-control subtotal" value="${precioUnitario.toFixed(2)}" name="DetallesVenta[${filaIndex}].Subtotal" readonly />
                    </td>
                    <td>
                        <button type="button" class="btn btn-danger" onclick="$(this).closest('tr').remove(); calcularTotal(); actualizarDescuento();">
                            <i class="bi bi-trash"></i>
                        </button>
                    </td>
                </tr>
            `;
            $tbody.append(rowHtml);
            calcularTotal();
            actualizarDescuento();
            filaIndex++;
        }

        // Actualiza el subtotal al cambiar la cantidad
        function actualizarSubtotal(inputElement) {
            var $row = $(inputElement).closest('tr');
            var cantidad = parseFloat($row.find('.cantidad-input').val());
            var precio = parseFloat($row.find('.precio-unitario').val());
            var $subtotalInput = $row.find('.subtotal');
            if (!isNaN(cantidad) && !isNaN(precio)) {
                var subtotal = cantidad * precio;
                $subtotalInput.val(subtotal.toFixed(2));
            }
            calcularTotal();
            actualizarDescuento();
        }

        // Calcula el total de la venta
        function calcularTotal() {
            var total = 0;
            $('.subtotal').each(function () {
                total += parseFloat($(this).val()) || 0;
            });
            $('#totalVenta').text('$' + total.toFixed(2));
            $('input[name="Total"]').val(total.toFixed(2));
        }

        // Calcula y muestra el descuento y el total con descuento
        function actualizarDescuento() {
            var total = parseFloat($('input[name="Total"]').val()) || 0;
            var descuento = 0;
            var totalConDescuento = total;

            var $promoSelected = $('#PromocionId option:selected');
            var porcentajeDescuento = parseFloat($promoSelected.data('descuento')) || 0;

            if (porcentajeDescuento > 0) {
                descuento = total * porcentajeDescuento;
                totalConDescuento = total - descuento;
            }

            $('#descuentoVenta').text('$' + descuento.toFixed(2));
            $('#totalConDescuento').text('$' + totalConDescuento.toFixed(2));
        }

        // Eventos para recalcular descuento
        $('#PromocionId').on('change', actualizarDescuento);
        $('#tabla-detalles').on('input', '.cantidad-input', actualizarDescuento);
        //$('#tabla-detalles').on('DOMSubtreeModified', actualizarDescuento);

        // Validación antes de enviar el formulario
        $('form[asp-action="Crear"]').on('submit', function (e) {
            var filas = $('#tabla-detalles tbody tr');
            if (filas.length === 0) {
                alert('Debe agregar al menos un producto a la venta.');
                e.preventDefault();
                return false;
            }
            if (!$('#clienteInput').val()) {
                alert('Debe seleccionar un cliente.');
                e.preventDefault();
                return false;
            }
        });
    </script>
}